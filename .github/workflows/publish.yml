name: Publish to NPM

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Run linting
        run: pnpm lint

      - name: Run tests
        run: pnpm test

      - name: Build package
        run: pnpm build

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install

      - name: Build package
        run: pnpm build

      - name: Check if version changed
        id: check-version
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Check if this version exists on npm
          if npm view express-mcp@$CURRENT_VERSION version 2>/dev/null; then
            echo "version_exists=true" >> $GITHUB_OUTPUT
          else
            echo "version_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish to NPM
        if: steps.check-version.outputs.version_exists == 'false'
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.check-version.outputs.version_exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.check-version.outputs.current_version }}
          release_name: Release v${{ steps.check-version.outputs.current_version }}
          body: |
            ## Changes in v${{ steps.check-version.outputs.current_version }}
            
            Published to NPM: https://www.npmjs.com/package/express-mcp
            
            Install with:
            ```bash
            npm install express-mcp
            # or
            pnpm add express-mcp
            ```
            
            Use with npx:
            ```bash
            npx express-mcp init
            npx express-mcp test --url http://localhost:3000/mcp
            ```
          draft: false
          prerelease: false
